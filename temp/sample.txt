import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Around;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class UOMCodeSanitizationAspect {

    private static final Logger logger = LoggerFactory.getLogger(UOMCodeSanitizationAspect.class);

    @Around("execution(* com.sherwin.edps.batchmgmtbff.services.*.*(..)) && args(.., uomCode, ..)")
    public Object sanitizeUOMCode(ProceedingJoinPoint joinPoint, String uomCode) throws Throwable {
        // Apply sanitization
        String sanitizedUOMCode = sanitize(uomCode);
        logger.info("Sanitized uomCode: {}", sanitizedUOMCode);

        // Replace the original uomCode argument with the sanitized value
        Object[] args = joinPoint.getArgs();
        for (int i = 0; i < args.length; i++) {
            if (args[i] instanceof String && args[i].equals(uomCode)) {
                args[i] = sanitizedUOMCode;
            }
        }

        // Proceed with the sanitized arguments
        return joinPoint.proceed(args);
    }

    // Sanitization logic
    public static String sanitize(String input) {
        return input.replaceAll("[^A-Za-z0-9_\\-]", "");
    }
}
