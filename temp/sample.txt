import org.springframework.stereotype.Component;
import org.springframework.web.servlet.HandlerInterceptor;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.util.regex.Pattern;

@Component
public class InputValidationInterceptor implements HandlerInterceptor {

    // Regex to allow only alphanumeric characters, dashes, and underscores
    private static final Pattern SAFE_PATTERN = Pattern.compile("^[a-zA-Z0-9_-]*$");

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
        // Validate query parameters (you can add more as needed)
        String organizationCode = request.getParameter("organizationCode");
        String itemNumber = request.getParameter("itemNumber");
        String workOrderNumber = request.getParameter("workOrderNumber");

        // If any input is invalid, block the request
        if (!isValid(organizationCode) || !isValid(itemNumber) || !isValid(workOrderNumber)) {
            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
            response.getWriter().write("Invalid input parameters detected");
            return false; // Reject the request
        }

        return true; // Allow the request to proceed
    }

    // Utility method to validate input using the SAFE_PATTERN regex
    private boolean isValid(String input) {
        return input == null || SAFE_PATTERN.matcher(input).matches();
    }
}

-------


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
public class WebConfig implements WebMvcConfigurer {

    @Autowired
    private InputValidationInterceptor inputValidationInterceptor;

    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        // Register the interceptor for all endpoints
        registry.addInterceptor(inputValidationInterceptor);
    }
}


****************

    <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <scope>provided</scope>
    </dependency>
</dependencies>

