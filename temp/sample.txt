import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Around;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class ParameterSanitizationAspect {

    private static final Logger logger = LoggerFactory.getLogger(ParameterSanitizationAspect.class);

    @Around("execution(* com.sherwin.edps.batchmgmtbff.services.*.*(..))")
    public Object sanitizeParameters(ProceedingJoinPoint joinPoint) throws Throwable {
        Object[] args = joinPoint.getArgs();

        // Sanitize all String parameters
        for (int i = 0; i < args.length; i++) {
            if (args[i] instanceof String) {
                String originalValue = (String) args[i];
                String sanitizedValue = sanitize(originalValue);
                logger.info("Sanitized parameter: {} -> {}", originalValue, sanitizedValue);
                args[i] = sanitizedValue;
            }
        }

        // Proceed with sanitized arguments
        return joinPoint.proceed(args);
    }

    // Sanitization logic
    public static String sanitize(String input) {
        if (input == null) {
            return null;
        }
        return input.replaceAll("[^A-Za-z0-9_\\-]", ""); // Only allow alphanumeric, underscore, and hyphen
    }
}
